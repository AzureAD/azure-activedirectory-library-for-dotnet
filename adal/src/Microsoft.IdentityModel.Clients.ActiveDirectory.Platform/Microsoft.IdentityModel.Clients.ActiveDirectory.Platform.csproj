<Project Sdk="MSBuild.Sdk.Extras/1.5.4">

  <!-- Exclude the analysis of this framework type: workaround for https://jira.sonarsource.com/browse/SONARMSBRU-317 -->
  <!-- NB this property has no effect on the assemblies that are built - it is only to tell the VSTS SonarQube analysis tasks
       which assembly to analyse. -->
  <PropertyGroup Condition="'$(TargetFramework)' != 'net45' ">
    <SonarQubeExclude>true</SonarQubeExclude>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>net45;netstandard1.1;netstandard1.3;win81;MonoAndroid8.1;Xamarin.iOS10</TargetFrameworks>        
    <Product>Microsoft.IdentityModel.Clients.ActiveDirectory.Platform ($(TargetFramework))</Product>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\build\35MSSharedLib1024.snk</AssemblyOriginatorKeyFile>
	  <DelaySign>true</DelaySign>
    <!-- Workaround until Xamarin supports PPDB -->
    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <DebugType>full</DebugType>
    <RootNamespace>Microsoft.IdentityModel.Clients.ActiveDirectory</RootNamespace>
	  <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>

  <PropertyGroup Label="GenerateAssemblyInfo inputs">
    <!-- This should be passed from the VSTS build -->
    <AdalClientSemVer Condition="'$(AdalClientSemVer)' == ''">1.0.0-localbuild</AdalClientSemVer>

    <!-- This will generate AssemblyVersion, AssemblyFileVersion and AssemblyInformationVersion -->
    <Version>$(AdalClientSemVer)</Version>

    <Copyright>Copyright (c) Microsoft Corporation. All rights reserved.</Copyright>
    <Company>Microsoft Corporation</Company>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.1' ">
    <DefineConstants>$(DefineConstants);FACADE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'win81' or '$(TargetFramework)' == 'uap10.0' ">
    <DefineConstants>$(DefineConstants);WINDOWS_APP</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'MonoAndroid8.1'">
    <DefineConstants>$(DefineConstants);ANDROID</DefineConstants>
    <NoWarn>$(NoWarn);CS8002</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'net45'">
	<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DefineConstants>$(DefineConstants);DESKTOP</DefineConstants>
    <NoWarn>$(NoWarn);CS8002</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'Xamarin.iOS10'">
    <DefineConstants>$(DefineConstants);iOS</DefineConstants>
    <NoWarn>$(NoWarn);CS8002</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <!-- This None is here so the conditionally included files show up in the Solution Explorer -->
    <None Include="**\*.cs;**\*.xml;**\*.axml" Exclude="obj\**\*.*;bin\**\*.*" />
    <Compile Include="..\Microsoft.IdentityModel.Clients.ActiveDirectory\Properties\AssemblyInfo.cs">
      <Link>AssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="TypeForwardToDeclarations.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'Xamarin.iOS10' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'MonoAndroid8.1' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.IdentityModel.Clients.ActiveDirectory\Microsoft.IdentityModel.Clients.ActiveDirectory.csproj" />
  </ItemGroup>

  <!-- Copies all artifacts needed to generate the nuget package. This should be replaced with msbuild /t:pack, however
  bug https://github.com/NuGet/Home/issues/3891 blocks this, espcially that packaging rebuilds the Core assemblies, so we cannot sign it.-->
  <Target Name="LayoutNuGet">
    <PropertyGroup>
      <NugetPackageRootFolder Condition="'$(NugetPackageRootFolder)' == ''">$([System.IO.Path]::Combine($(MSBuildThisFileDirectory), "..", ".nugetlayout"))</NugetPackageRootFolder>
      <NuspecFilePath>$([System.IO.Path]::Combine($(MSBuildThisFileDirectory), "..", "..", "build", "Microsoft.IdentityModel.Clients.ActiveDirectory.nuspec"))</NuspecFilePath>
    </PropertyGroup>

    <ItemGroup>
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.dll" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.xml" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.pdb" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.xml" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.pdb" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.Identity.Core.dll" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.Identity.Core.xml" />
      <FilesToPack Include="bin\$(Configuration)\**\Microsoft.Identity.Core.pdb" />
    </ItemGroup>
    <ItemGroup>
      <PackageReference Include="AsyncUsageAnalyzers" Version="1.0.0-alpha003" PrivateAssets="All"/>
    </ItemGroup>

    <RemoveDir Directories="$(NugetPackageRootFolder)" />
    <Copy SourceFiles="@(FilesToPack)" DestinationFiles="$(NugetPackageRootFolder)\lib\%(RecursiveDir)%(FileName)%(Extension)" />
    <Copy SourceFiles="$(NuspecFilePath)" DestinationFolder="$(NugetPackageRootFolder)" />
  </Target>
  <PropertyGroup>
    <CodeAnalysisRuleSet>../../../core/ConfigureAwait.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AsyncUsageAnalyzers" Version="1.0.0-alpha003" PrivateAssets="All"/>
  </ItemGroup>
</Project>