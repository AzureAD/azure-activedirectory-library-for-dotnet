<Project>
  
  <!-- This targets file works round a problem with the VSTS SDL FxCop task.
  
       FxCop needs to be able to find all of the referenced binaries. The VSTS task allows multiple reference folders
       to be specified to search for referenced binaries, but the search doesn't recursive into those folders.
       
       This causes a problem with .Net Core projects that use NuGet to reference platform assemblies as the required
       assemblies are not in a flat folder structure, so each package folder has to specified separately.
       
       This file works round the issue by copying all of the referenced binaries to a single folder. The VSTS task can
       then be configured to search this folder.
       
       Using the targets as part of a VSTS build
       =========================================
       1. Import this target into the project being built
           For .Net Core projects, you can just drop this file next to the project file: see https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build
           Alternatively, explicitly import the targets into your project.
       
       2. Pass in the folder path the referenced binaries should be copied to
          e.g. /p:ReferencedAsmListFolderPath=MyFolder
          
           The targets will not run if the property has not been set.
           You can use VSTS build variables when specifying the folder: see https://www.visualstudio.com/en-us/docs/build/define/variables
           
       3. Configure the VSTS FxCop task to look in that folder
       
    -->
  <Target Name="CopyReferencedAssembliesToSingleFolder" AfterTargets="Build" Condition="$(ReferencedAsmListFolderPath)!=''">
    <Message Importance="high" Text="Copying assemblies referenced during the build to: $(ReferencedAsmListFolderPath)" />
    <MakeDir Directories="$(ReferencedAsmListFolderPath)" />
    <Copy SourceFiles="@(ReferencePath)" DestinationFolder="$(ReferencedAsmListFolderPath)" />
  </Target>

</Project>