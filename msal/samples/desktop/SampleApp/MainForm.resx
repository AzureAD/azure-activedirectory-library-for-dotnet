<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>